name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Set up database (PostgreSQL) using Docker
      - name: Set up PostgreSQL
        uses: docker/setup-buildx-action@v2
      - name: Start PostgreSQL container
        run: |
          docker run --name test-postgres -e POSTGRES_USER=test_user -e POSTGRES_PASSWORD=test_password -e POSTGRES_DB=test_db -p 5432:5432 -d postgres:latest
      - name: Wait for PostgreSQL to start
        run: sleep 15

      # Set environment variables for tests
      - name: Set environment variables
        run: |
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_USER=test_user" >> $GITHUB_ENV
          echo "DB_PASSWORD=test_password" >> $GITHUB_ENV
          echo "DB_NAME=test_db" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
          echo "SALT=random_salt" >> $GITHUB_ENV

      # Debug directory structure
      - name: Debug directory structure
        run: ls -R

      # Run tests
      - name: Run tests
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
          SALT: ${{ secrets.SALT }}
        run: pytest tests/

      # Stop and remove the PostgreSQL container
      - name: Clean up PostgreSQL container
        if: always()
        run: docker stop test-postgres && docker rm test-postgres
